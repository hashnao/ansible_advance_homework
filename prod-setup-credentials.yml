---

- hosts: tag_AnsibleGroup_bastions
  gather_facts: true
  become: true
  vars:
    bastion_requisie_packages:
    - python
    - python-pip
    - python-devel
    - gcc
  vars_files:
  - roles/config-tower/defaults/main.yml
  tasks:
  - name: install required packages
    yum:
      name: "{{ bastion_requisie_packages }}"
      state: latest

  - name: install tower-cli
    pip:
      name: ansible-tower-cli
      state: latest

  - name: list key files
    shell: (cd /root/.ssh; find . -maxdepth 1 -type f -iname '*key.pem')| cut -d'/' -f2
    register: file_to_copy

  - name: create credential for ec2 instances
    tower_credential:
      name: "{{ tower_aws_cred_name }}"
      organization: "{{ tower_organization }}"
      state: present
      kind: ssh
      tower_host: tower1.{{ TOWER_GUID }}.example.opentlc.com
      tower_username: "{{ tower_username }}"
      tower_password: "{{ tower_password }}"
      ssh_key_data: "/root/.ssh/{{ file_to_copy.stdout }}"
      username: "{{ tower_ssh_ec2_username }}"
      tower_verify_ssl: false

  - name: update inventory group variable
    tower_group:
      name: "{{ item }}"
      variables: "ansible_user: {{ tower_ssh_ec2_username }}"
      tower_verify_ssl: false
    with_items:
      - tag_AnsibleGroup_appdbs
      - tag_AnsibleGroup_apps
      - tag_AnsibleGroup_frontends

  - name: update 3-tier application job template for product environment
    tower_job_template:
      name: "{{ tower_job_template_3tier_app_prod }}"
      credential: "{{ tower_aws_cred_name }}"
      tower_host: tower1.{{ TOWER_GUID }}.example.opentlc.com
      tower_username: "{{ tower_username }}"
      tower_password: "{{ tower_password }}"
      state: present
      job_type: run
      playbook: "{{ tower_playbook_3tier_app_prod }}"
      project: "{{ tower_project_name }}"
      tower_verify_ssl: false

  - name: update smoke test job template for production environment
    tower_job_template:
      name: "{{ tower_job_template_smoke_prod }}"
      credential: "{{ tower_aws_cred_name }}"
      tower_host: tower1.{{ TOWER_GUID }}.example.opentlc.com
      tower_username: "{{ tower_username }}"
      tower_password: "{{ tower_password }}"
      state: present
      job_type: run
      playbook: "{{ tower_playbook_smoke_prod }}"
      project: "{{ tower_project_name }}"
      tower_verify_ssl: false
